How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I didn't even catch one of the textual bugs. Using the version control actually helped to spot on the errors.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I could focus on what simply matters in my code and less worry about maintaining code and of mistakely losing files

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Main pros, I'm able to make better judgement calls on when and what to commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    It is a design perspective with the intended user in mind. Git is for code development of (usually) inter-related files. Docs on the other may not have such properities

How can you use the commands git log and git diff to view the history of files?

    git log displays all commits in a repository; git diff compares the changes between two commits

How might using version control make you more confident to make changes that
could break something?

    I could always get my files back

Now that you have your workspace set up, what do you want to try using Git for?

    I actually left my system as at the default setup. Works well for me in 2018